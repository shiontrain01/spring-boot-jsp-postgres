version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwe123
      POSTGRES_DB: gestao_projetos
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    ports:
      - '9000:9000'
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    networks:
      - app-network
    depends_on:
      - sonarqube-db

  sonarqube-db:
    image: postgres:12
    container_name: sonarqube-db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    networks:
      - app-network
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  app:
    build: .
    container_name: app
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - app-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/gestao_projetos
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: qwe123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
  postgresql_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
